--Basic SELECT
--1
SELECT DEPARTMENT_NAME AS "학과 명" , CATEGORY AS "계열"
FROM TB_DEPARTMENT;

--2
SELECT DEPARTMENT_NAME || '의 ''정원은 ' || CAPACITY || '입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;

--3
SELECT STUDENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NO = 
(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과') 
AND SUBSTR (STUDENT_SSN, 8, 1) IN ('2', '4') AND ABSENCE_YN ='Y';

--4
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119');

--5 
SELECT DEPARTMENT_NAME, CAPACITY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN '20' AND '30';

--6
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

--8
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY;

-10
SELECT STUDENT_NO, STUDENT_NAME, ABSENCE_YN AS "STUDENT_SSN"
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002 AND STUDENT_ADDRESS LIKE '%전주%' AND ABSENCE_YN ='N';

---------------------------------------------------------------------------
--Additional SELECT -함수
--1
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "이름", ENTRANCE_DATE AS "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002';

--2
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';

--3
SELECT PROFESSOR_NAME AS "교수이름", 
(TO_CHAR(TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'YYMMDD') ,'YYYY') - 100) AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = 1
ORDER BY PROFESSOR_SSN DESC;

--4
SELECT SUBSTR(PROFESSOR_NAME, 2,3) AS "이름"
FROM TB_PROFESSOR;

--5
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)
- LPAD(SUBSTR(STUDENT_SSN, 1, 2), 4, '19') >= 20;

--6
SELECT TO_CHAR(TO_DATE(20201225), 'DAY')
FROM DUAL;

--7
SELECT TO_DATE('99/10/11', 'YY/MM/DD') FROM DUAL;
SELECT TO_DATE('49/10/11', 'YY/MM/DD') FROM DUAL;
SELECT TO_DATE('99/10/11', 'RR/MM/DD') FROM DUAL;
SELECT TO_DATE('49/10/11', 'RR/MM/DD') FROM DUAL;

--8
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

--9
SELECT ROUND(AVG(POINT), 1) AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--10
SELECT DEPARTMENT_NO AS "학과번호", COUNT(*) AS "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--11
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12
SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", ROUND(AVG(POINT), 1) AS "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1, 4);

--13
SELECT DEPARTMENT_NO AS "학과코드명", COUNT (DECODE(ABSENCE_YN, 'Y', 'Y')) AS "휴학생"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--14
SELECT STUDENT_NAME AS "동일이름", COUNT (*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) >1
ORDER BY 1;

--15
SELECT NVL(SUBSTR(TERM_NO, 1, 4), ' ') AS "년도", NVL(SUBSTR(TERM_NO, 5, 2), ' ') AS "학기", ROUND(AVG(POINT), 1) AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP (SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2));

-------------------------------------------------------------------------------
--Additional SELECT -Option
--1
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN ='Y'
ORDER BY STUDENT_SSN DESC;

--3
SELECT STUDENT_NAME AS "학생이름", STUDENT_NO AS "학번", STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '%강원도%' OR STUDENT_ADDRESS LIKE '%경기도%'
AND ENTRANCE_DATE BETWEEN '90/01/01' AND '99/12/31';

--4
SELECT P.PROFESSOR_NAME, P.PROFESSOR_SSN
FROM TB_PROFESSOR P
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY 2;

--5
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE TERM_NO = '200402' AND CLASS_NO = 'C3118100'
ORDER BY 2 DESC;

--6
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO )
ORDER BY S.STUDENT_NAME;

--7
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

--8
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON (C.CLASS_NO = CP.CLASS_NO)
JOIN TB_PROFESSOR P ON(CP.PROFESSOR_NO = P.PROFESSOR_NO)
ORDER BY C.DEPARTMENT_NO, P.PROFESSOR_NO;

--9
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON (C.CLASS_NO = CP.CLASS_NO)
JOIN TB_PROFESSOR P ON(CP.PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE D.CATEGORY = '인문사회'
ORDER BY C.DEPARTMENT_NO, P.PROFESSOR_NO;

--10
SELECT S.STUDENT_NO AS "학번", S.STUDENT_NAME AS "학생 이름", ROUND(AVG(G.POINT), 1) AS "전체 평점"
FROM TB_STUDENT S
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE D.DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
ORDER BY 1;

--11
SELECT D.DEPARTMENT_NAME AS "학과이름", S.STUDENT_NAME AS "학생이름", P.PROFESSOR_NAME AS "지도교수이름"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_PROFESSOR P ON(S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
WHERE S.STUDENT_NO = 'A313047';

--12
SELECT S.STUDENT_NAME, G.TERM_NO AS "TERM_NAME"
FROM TB_STUDENT S
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
JOIN TB_CLASS C ON (G.CLASS_NO = C.CLASS_NO)
WHERE G.TERM_NO LIKE '2007%' AND C.CLASS_NAME = '인간관계론';

--13
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
LEFT JOIN TB_CLASS_PROFESSOR CP ON (C.CLASS_NO = CP.CLASS_NO)
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CP.PROFESSOR_NO IS NULL AND D.CATEGORY = '예체능';

--14
SELECT S.STUDENT_NAME AS "학생이름", NVL(P.PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON(S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE D.DEPARTMENT_NAME = '서반아어학과'
ORDER BY ENTRANCE_DATE;

--15
SELECT S.STUDENT_NO AS "학번", S.STUDENT_NAME AS "이름", D.DEPARTMENT_NAME AS "학과 이름", TRUNC(AVG(G.POINT), 8) AS "평점"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
WHERE S.ABSENCE_YN = 'N'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
HAVING AVG(G.POINT) >= 4.0
ORDER BY 1;

--16
SELECT C.CLASS_NO, C.CLASS_NAME, TRUNC(AVG(G.POINT), 8) AS "AVG(POINT)"
FROM TB_CLASS C
JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
JOIN TB_DEPARTMENT D ON(C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE D.DEPARTMENT_NAME = '환경조경학과' AND C.CLASS_TYPE LIKE '전공%'
GROUP BY C.CLASS_NO, C.CLASS_NAME
ORDER BY 1;

--17
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
                        FROM TB_STUDENT
                        WHERE STUDENT_NAME = '최경희');
                        
-18
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT S.STUDENT_NO, S.STUDENT_NAME, AVG(G.POINT)
        FROM TB_STUDENT S
        JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
        JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
    WHERE D.DEPARTMENT_NAME = '국어국문학과' 
    GROUP BY S.STUDENT_NO, S.STUDENT_NAME
    ORDER BY AVG(G.POINT)DESC)
WHERE ROWNUM =1;

--19
SELECT D. DEPARTMENT_NAME AS "계열 학과명", ROUND(AVG(G.POINT), 1) AS "전공평점"
FROM TB_DEPARTMENT D
JOIN TB_CLASS C ON (D.DEPARTMENT_NO = C.DEPARTMENT_NO)
JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
WHERE D.CATEGORY = (SELECT D.CATEGORY
                        FROM TB_DEPARTMENT D
                        WHERE DEPARTMENT_NAME = '환경조경학과')
    AND C.CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME;

-----------------------------------------------------------------------
--DDL
--1
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

--2
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) CONSTRAINT PK PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3
ALTER TABLE TB_CATEGORY ADD CONSTRAINT TB_CATEGORY_NAME_PK PRIMARY KEY(NAME);

--4
ALTER TABLE TB_CLASS_TYPE MODIFY NAME CONSTRAINT TB_CLASS_TYPE_NAME_NN NOT NULL;

--5
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);

--6
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;

--7
ALTER TABLE TB_CATECORY
DROP CONSTRAINT TB_CATEGORY_NAME_PK;

ALTER TABLE TB_CLASS_TYPE
DROP CONSTRAINT PK;

-- 삭제 후 다시 만들기

ALTER TABLE TB_CATEGORY
ADD CONSTRAINT PK_CATEGORY_NAME PRIMARY KEY(CATAGORY_NAME);

ALTER TABLE TB_CLASS_TYPE
ADD CONSTRAINT PK_CLASS_TYPE_NO PRIMARY KEY(CLASS_TYPE_NO);

--8
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

--9
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) 
REFERENCES TB_CATEGORY (CATEGORY_NAME);

--10
CREATE OR REPLACE VIEW VW_학생일반정보
AS  SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT;

--11
CREATE OR REPLACE VIEW VW_지도면담
AS (SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME, '지도교수없음')
    FROM TB_STUDENT S
    JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
    JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
    ORDER BY 2);
    
--12
CREATE OR REPLACE VIEW VW_학과별학생수
AS
    SELECT DEPARTMENT_NAME, COUNT(STUDENT_NAME) AS "STUDENT_COUNT"
    FROM TB_DEPARTMENT
    LEFT JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;

--13
UPDATE VW_학생일반정보
SET STUDENT_NAME = '이산아'
WHERE STUDENT_NO = 'A213046';

--14
CREATE OR REPLACE VIEW VS_학생일반정보
AS  SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT
WITH READ ONLY;

--15
SELECT "과목번호", "과목이름", "수강생수"
FROM (  SELECT ROWNUM, "과목번호", "과목이름", "수강생수"
FROM (
        SELECT C.CLASS_NO "과목번호", C.CLASS_NAME "과목이름", COUNT(*) "수강생수"
        FROM TB_CLASS C
        LEFT JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
        WHERE SUBSTR(G.TERM_NO, 1,4) IN (2009, 2008, 2007)
        GROUP BY C.CLASS_NO, C.CLASS_NAME
        ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 3);

---------------------------------------------------------------------------------
--DML
--1
INSERT INTO TB_CLASS_TYPE VALUES('01', '전공필수');
INSERT INTO TB_CLASS_TYPE VALUES('02', '전공선택');
INSERT INTO TB_CLASS_TYPE VALUES('03', '교양필수');
INSERT INTO TB_CLASS_TYPE VALUES('04', '교양선택');
INSERT INTO TB_CLASS_TYPE VALUES('05', '논문지도');

--2
CREATE TABLE TB_학생일반정보
AS 
SELECT
    SUTDENT_NO AS "학번",
    STUDENT_NAME AS "학생이름",
    STUDENT_ADDRESS AS "주소"
FROM TB_STUDENT;

--3
CREATE TABLE TB_국어국문학과
AS 
    SELECT STUDENT_NO "학번", 
           STUDENT_NAME "학생이름", 
           TO_CHAR(TO_DATE('19' || SUBSTR(STUDENT_SSN, 1, 6), 'YYYYMMDD'), 'YYYY') "출생년도", 
           NVL(PROFESSOR_NAME, '지도교수 없음') "교수이름"
    FROM TB_STUDENT S
    LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
    JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
    WHERE S.DEPARTMENT_NO IN (SELECT DEPARTMENT_NO 
                              FROM TB_DEPARTMENT
                              WHERE DEPARTMENT_NAME = '국어국문학과');
                              
DROP TABLE TB_국어국문학과;

SELECT STUDENT_NAME
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';

SELECT DEPARTMENT_NO 
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '국어국문학과';

SELECT TO_CHAR(TO_DATE('19' || SUBSTR(STUDENT_SSN, 1, 6), 'YYYYMMDD'), 'YYYY')
FROM TB_STUDENT;

--4
CREATE TABLE PLUS_CAPACITY
AS SELECT CAPACITY
   FROM TB_GRADE;

UPDATE PLUS_CAPACITY
SET CAPACITY = ROUND(CAPACITY * 1.1);

UPDATE TB_DEPARTMENT
SET CAPACITY = CAPACITY + ROUND(CAPACITY * 0.1);

--5
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042';

--6
UPDATE TB_STUDENT
SET STUDENT_SSN = SUBSTR(STUDENT_SSN, 1, 6);

-- 뒷자리는 *로 채우기
UPDATE TB_STUDENT
SET STUDENT_SSN = RPAD(SUBSTR(STUDENT_SSN, 1, 8), 14, '*');

--7
SELECT TERM_NO, CLASS_NAME, POINT
FROM TB_GRADE G
RIGHT JOIN TB_STUDENT S ON (G.STUDENT_NO = S.STUDENT_NO)
JOIN TB_CLASS C ON (C.CLASS_NO = G.CLASS_NO)
WHERE STUDENT_NAME = '김명훈' AND TERM_NO = '200501' AND CLASS_NAME = '피부생리학';

UPDATE TB_GRADE
SET POINT = 3.5
WHERE POINT IN (
    SELECT POINT
    FROM TB_GRADE G
    RIGHT JOIN TB_STUDENT S ON (G.STUDENT_NO = S.STUDENT_NO)
    JOIN TB_CLASS C ON (C.CLASS_NO = G.CLASS_NO)
    WHERE STUDENT_NAME = '김명훈' AND TERM_NO = '200501' AND CLASS_NAME = '피부생리학'
);

ROLLBACK;

--8
DELETE FROM TB_TABLE 
WHERE STUDENT_NO IN (
                     SELECT STUDENT_NO
                     FROM TB_STUDENT
                     WHERE ABSENCE_YN = 'Y');





































